.players-section {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 16px;
  margin-bottom: 20px;
}

.player-card {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.12),
    rgba(255, 255, 255, 0.04)
  );
  border: 2px solid rgba(255, 255, 255, 0.15);
  border-radius: 16px;
  overflow: hidden;
  transition: all 0.3s ease;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  backdrop-filter: blur(10px);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--accent-gradient);
    box-shadow: 0 0 10px var(--accent-color);
  }

  &:nth-child(1) {
    --accent-color: #8b5cf6;
    --accent-gradient: linear-gradient(90deg, #8b5cf6, #7c3aed);
    --accent-color-rgb: 139, 92, 246;
  }
  &:nth-child(2) {
    --accent-color: #ff6b35;
    --accent-gradient: linear-gradient(90deg, #ff6b35, #ff5722);
    --accent-color-rgb: 255, 107, 53;
  }
  &:nth-child(3) {
    --accent-color: #14b8a6;
    --accent-gradient: linear-gradient(90deg, #14b8a6, #0f766e);
    --accent-color-rgb: 20, 184, 166;
  }
  &:nth-child(4) {
    --accent-color: #4361ee;
    --accent-gradient: linear-gradient(90deg, #4361ee, #3742fa);
    --accent-color-rgb: 67, 97, 238;
  }
}

.player-card.answered {
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 20px var(--accent-color);
}

// Correct answer styling
.player-card.player-correct {
  border-color: rgba(0, 230, 100, 0.5);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 30px rgba(0, 230, 100, 0.5);

  // Override accent color for the glow
  --accent-color: #00e064 !important;
  --accent-gradient: linear-gradient(90deg, #00e064, #00b050) !important;
  --accent-color-rgb: 0, 224, 100 !important;

  // Add subtle pulsing glow animation
  animation: correctPlayerGlow 3s infinite alternate ease-in-out;

  // Enhance the top bar glow
  &::before {
    height: 5px;
    background: var(--accent-gradient);
    box-shadow: 0 0 15px var(--accent-color);
  }

  // Make score text match the color
  .player-score {
    color: rgba(0, 230, 100, 0.9);
    text-shadow: 0 0 10px rgba(0, 230, 100, 0.5);
  }
}

// Incorrect answer styling
.player-card.player-incorrect {
  border-color: rgba(255, 70, 70, 0.5);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 30px rgba(255, 70, 70, 0.5);

  // Override accent color for the glow
  --accent-color: #ff4646 !important;
  --accent-gradient: linear-gradient(90deg, #ff4646, #dc2828) !important;
  --accent-color-rgb: 255, 70, 70 !important;

  // Add subtle pulsing glow animation
  animation: incorrectPlayerGlow 3s infinite alternate ease-in-out;

  // Enhance the top bar glow
  &::before {
    height: 5px;
    background: var(--accent-gradient);
    box-shadow: 0 0 15px var(--accent-color);
  }

  // Make score text match the color
  .player-score {
    color: rgba(255, 70, 70, 0.9);
    text-shadow: 0 0 10px rgba(255, 70, 70, 0.5);
  }
}

@keyframes intenseGridGlow {
  0% {
    opacity: 0.8;
    filter: blur(0.5px) brightness(1.3);
  }
  100% {
    opacity: 1;
    filter: blur(0.3px) brightness(1.6);
  }
}

// Glow animations for correct/incorrect states
@keyframes correctPlayerGlow {
  0% {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 20px rgba(0, 230, 100, 0.4);
  }
  100% {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 40px rgba(0, 230, 100, 0.6);
  }
}

@keyframes incorrectPlayerGlow {
  0% {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 20px rgba(255, 70, 70, 0.4);
  }
  100% {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4),
      inset 0 1px 0 rgba(255, 255, 255, 0.3), 0 0 40px rgba(255, 70, 70, 0.6);
  }
}

.player-avatar {
  text-align: center;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.05),
    rgba(255, 255, 255, 0.02)
  );
  min-height: 120px;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  position: relative;
  overflow: hidden;

  // Add the TV screen effect with larger grid
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      // Larger vertical lines
      repeating-linear-gradient(
        90deg,
        transparent 0px,
        transparent 8px,
        rgba(0, 255, 255, 0.15) 8px,
        rgba(0, 255, 255, 0.15) 9px,
        transparent 9px,
        transparent 16px
      ),
      // Larger horizontal lines
      repeating-linear-gradient(
          0deg,
          transparent 0px,
          transparent 8px,
          rgba(255, 255, 255, 0.1) 8px,
          rgba(255, 255, 255, 0.1) 9px,
          transparent 9px,
          transparent 16px
        ),
      // Radial gradient for screen curvature effect
      radial-gradient(
          ellipse at center,
          rgba(255, 255, 255, 0.1) 0%,
          rgba(255, 255, 255, 0.05) 50%,
          rgba(0, 0, 0, 0.1) 100%
        );
    pointer-events: none;
    z-index: 1;

    // Add subtle glow animation
    animation: gridGlow 3s ease-in-out infinite alternate;
  }

  // Add a subtle border glow
  &::after {
    content: '';
    position: absolute;
    top: 8px;
    left: 8px;
    right: 8px;
    bottom: 8px;
    border: 1px solid rgba(var(--accent-color-rgb), 0.3);
    border-radius: 4px;
    pointer-events: none;
    z-index: 1;
    box-shadow: inset 0 0 20px rgba(var(--accent-color-rgb), 0.1),
      0 0 10px rgba(var(--accent-color-rgb), 0.2);
  }

  // Enhanced glow effect for answered state
  .player-card.answered & {
    &::before {
      background: 
        // More intense grid lines when answered
        repeating-linear-gradient(
          90deg,
          transparent 0px,
          transparent 8px,
          rgba(0, 255, 255, 0.4) 8px,
          // Increased from 0.15
          rgba(0, 255, 255, 0.4) 9px,
          transparent 9px,
          transparent 16px
        ),
        repeating-linear-gradient(
          0deg,
          transparent 0px,
          transparent 8px,
          rgba(255, 255, 255, 0.3) 8px,
          // Increased from 0.1
          rgba(255, 255, 255, 0.3) 9px,
          transparent 9px,
          transparent 16px
        ),
        // Brighter radial gradient
        radial-gradient(
            ellipse at center,
            rgba(255, 255, 255, 0.2) 0%,
            // Increased from 0.1
            rgba(255, 255, 255, 0.1) 50%,
            // Increased from 0.05
            rgba(0, 0, 0, 0.1) 100%
          );

      // Enhanced animation for answered state
      animation: intenseGridGlow 2s ease-in-out infinite alternate;
      filter: blur(0.5px) brightness(1.3); // Add brightness boost
    }

    &::after {
      // Make the border glow much more intense
      border: 2px solid rgba(var(--accent-color-rgb), 0.8); // Increased from 0.3
      box-shadow: inset 0 0 30px rgba(var(--accent-color-rgb), 0.3),
        // Increased from 0.1
        0 0 25px rgba(var(--accent-color-rgb), 0.6),
        // Increased from 0.2
        0 0 50px rgba(var(--accent-color-rgb), 0.3); // Add extra outer glow
    }
  }

  // Special styling for correct player card
  .player-card.player-correct & {
    &::before {
      background: 
        // Green-tinted grid lines
        repeating-linear-gradient(
          90deg,
          transparent 0px,
          transparent 8px,
          rgba(0, 230, 100, 0.3) 8px,
          rgba(0, 230, 100, 0.3) 9px,
          transparent 9px,
          transparent 16px
        ),
        repeating-linear-gradient(
          0deg,
          transparent 0px,
          transparent 8px,
          rgba(0, 230, 100, 0.2) 8px,
          rgba(0, 230, 100, 0.2) 9px,
          transparent 9px,
          transparent 16px
        ),
        // Greener radial gradient
        radial-gradient(
            ellipse at center,
            rgba(0, 230, 100, 0.15) 0%,
            rgba(0, 230, 100, 0.05) 50%,
            rgba(0, 0, 0, 0.1) 100%
          );
      animation: correctGridGlow 2s ease-in-out infinite alternate;
      background-size: 16px 16px, 16px 16px, 100% 100%;

      /* Combine diagonal movement with glow effect */
      animation: diagonalGridMotion 0.8s infinite linear,
        correctGridGlow 2s infinite alternate ease-in-out;
    }
  }

  // Special styling for incorrect player card
  .player-card.player-incorrect & {
    &::before {
      background: 
        // Red-tinted grid lines
        repeating-linear-gradient(
          90deg,
          transparent 0px,
          transparent 8px,
          rgba(255, 70, 70, 0.3) 8px,
          rgba(255, 70, 70, 0.3) 9px,
          transparent 9px,
          transparent 16px
        ),
        repeating-linear-gradient(
          0deg,
          transparent 0px,
          transparent 8px,
          rgba(255, 70, 70, 0.2) 8px,
          rgba(255, 70, 70, 0.2) 9px,
          transparent 9px,
          transparent 16px
        ),
        // Redder radial gradient
        radial-gradient(
            ellipse at center,
            rgba(255, 70, 70, 0.15) 0%,
            rgba(255, 70, 70, 0.05) 50%,
            rgba(0, 0, 0, 0.1) 100%
          );
      animation: incorrectGridGlow 2s ease-in-out infinite alternate;
    }
  }

  .avatar-image {
    max-width: 120px;
    max-height: 120px;
    width: auto;
    height: auto;
    object-fit: contain;
    position: relative;
    z-index: 2;

    // Enhanced depth effects
    filter: drop-shadow(0 8px 20px rgba(0, 0, 0, 0.2)) // Reduced from 0.6
      drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1)) // Reduced from 0.4
      drop-shadow(0 1px 3px rgba(0, 0, 0, 0.3)) // Reduced from 0.8
      contrast(1.1) saturate(1.1);

    // Add a subtle outline/rim light effect
    &::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.3) 0%,
        rgba(255, 255, 255, 0.1) 50%,
        rgba(0, 0, 0, 0.1) 100%
      );
      border-radius: 50%;
      z-index: -1;
      opacity: 0.7;
      filter: blur(1px);
    }

    // Add subtle transform for more 3D feel
    transform: translateZ(0) perspective(100px) rotateX(-2deg);
    transform-style: preserve-3d;

    // Enhanced interaction
    transition: all 0.3s ease;
  }
}

@keyframes gridGlow {
  0% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes correctGridGlow {
  0% {
    opacity: 0.7;
    filter: brightness(1);
  }
  100% {
    opacity: 1;
    filter: brightness(1.3);
  }
}

@keyframes incorrectGridGlow {
  0% {
    opacity: 0.7;
    filter: brightness(1);
  }
  100% {
    opacity: 1;
    filter: brightness(1.3);
  }
}

.player-header {
  padding: 8px 20px;
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.player-name {
  font-weight: 700;
  font-size: 14px;
  color: rgba(255, 255, 255, 0.95);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.rank-badge {
  background: var(--accent-gradient);
  color: white;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 800;
  font-size: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.player-score {
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.3));
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding: 6px;
  text-align: center;
  font-weight: 800;
  font-size: 18px;
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);
}

.avatar-image.celebrating {
  animation: happyBob 0.3s ease-in-out infinite;
  transform-origin: bottom center;
}

@keyframes happyBob {
  0%,
  100% {
    transform: translateY(0px) scale(1);
  }
  50% {
    transform: translateY(8px) scale(1.05);
  }
}

.avatar-image.incorrect {
  animation: incorrectSlump 3s ease-in-out infinite;
  transform-origin: bottom center;
  filter: brightness(0.8) saturate(0.7);
}

@keyframes incorrectSlump {
  0%,
  15%,
  100% {
    transform: translateY(0) rotate(0deg);
  }
  30%,
  70% {
    transform: translateY(5px) rotate(-4deg);
  }
}

@keyframes diagonalGridMotion {
  0% {
    background-position: 0 0, 0 0, center center;
  }
  100% {
    background-position: -16px -16px, -16px -16px, center center;
  }
}
